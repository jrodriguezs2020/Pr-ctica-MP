/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ventanas;

import java.util.Scanner;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import practicamp.Desafio;
import practicamp.Jugador;
import practicamp.Sistema;
import practicamp.ValidarModificadores;

/**
 *
 * @author javii
 */
public class ValidarDesafios extends javax.swing.JFrame {
    Menu_O menu;
    Sistema sistema;
    DefaultListModel model;
    Jugador jugadorDesafiante;
    Jugador jugadorDesafiado;
    
    public ValidarDesafios(Sistema sistema, Menu_O menu) {
        initComponents();
        this.setLocationRelativeTo(null);
        this.menu = menu;
        this.sistema=sistema;
        model = new DefaultListModel<>();
        for (Jugador j: sistema.getUsuariosList() ){
            for(Desafio d: j.getDesafios()){
                if(j.equals(d.getDesafiante())){
                    if(!d.isValidado()){
                        String jugador1=d.getDesafiante().getNick();
                        jugadorDesafiante = d.getDesafiante();
                        String jugador2=d.getDesafiado().getNick();
                        jugadorDesafiado = d.getDesafiado();
                        String oro = Integer.toString(d.getOroApostado());
                        String notificacion=jugador1+" vs "+jugador2+"     Oro apostado: "+oro;
                        model.addElement(notificacion);
                    }
                }
            }
        }
        jList1.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelNotificaciones = new javax.swing.JLabel();
        jButtonVolver = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jLabelFondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabelNotificaciones.setBackground(new java.awt.Color(0, 16, 49));
        jLabelNotificaciones.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabelNotificaciones.setForeground(new java.awt.Color(255, 255, 255));
        jLabelNotificaciones.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelNotificaciones.setText("Desafios");
        jLabelNotificaciones.setOpaque(true);
        getContentPane().add(jLabelNotificaciones, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 290, 40));

        jButtonVolver.setBackground(new java.awt.Color(255, 255, 255));
        jButtonVolver.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonVolver.setForeground(new java.awt.Color(0, 16, 49));
        jButtonVolver.setText("Volver");
        jButtonVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVolverActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonVolver, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 20, -1, -1));

        jScrollPane1.setBackground(new java.awt.Color(0, 0, 102));
        jScrollPane1.setForeground(new java.awt.Color(255, 255, 255));

        jList1.setBackground(new java.awt.Color(0, 16, 49));
        jList1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jList1.setForeground(new java.awt.Color(255, 255, 255));
        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 90, 320, 240));

        jLabelFondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Fondo3.jpg"))); // NOI18N
        getContentPane().add(jLabelFondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 430, 420));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVolverActionPerformed
        this.setVisible(false);
        menu.setVisible(true);
    }//GEN-LAST:event_jButtonVolverActionPerformed

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
            Desafio desafio = buscarDesafio();
            int val = JOptionPane.showConfirmDialog(null, "Â¿Quiere validar el desafio?", "Validar desafio", JOptionPane.YES_NO_OPTION);
            if (val == 0) {
                desafio.setValidado(true); 
                ValidarModificadores vm = new ValidarModificadores(jugadorDesafiante,jugadorDesafiado);
                
                model.removeElement(jList1.getSelectedValue());
                jList1.setModel(model);
            }
            else{
                desafio.getDesafiado().getDesafios().remove(desafio);
                desafio.getDesafiante().getDesafios().remove(desafio);
            }

    }//GEN-LAST:event_jList1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ValidarDesafios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ValidarDesafios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ValidarDesafios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ValidarDesafios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
       /* java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NotificacionesDesafios().setVisible(true);
            }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
       /* java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NotificacionesDesafios().setVisible(true);
            }
        });*/
    }
        
    
    private Desafio buscarDesafio () {
        String notificacion = jList1.getSelectedValue();
            Scanner sc = new Scanner(notificacion);
            if (sc.hasNextLine()) {
                String nick1 = sc.next();
                String aux1=sc.next();
                String nick2 = sc.next();
                String oroApostadoS = sc.findInLine("Oro apostado: ");
                String aux = sc.next();
                int oroApostado = Integer.parseInt(aux);
                for(Jugador jugador: sistema.getUsuariosList()){
                    if(nick1.equals(jugador.getNick())){
                        for (Desafio d : jugador.getDesafios()) {
                            if (nick2.equals(d.getDesafiado().getNick())) {
                                if (oroApostado == d.getOroApostado()) {
                                    
                                    return d;
                                    
                                } 
                            }
                        }
                    }
                }
            }
        return null;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonVolver;
    private javax.swing.JLabel jLabelFondo;
    private javax.swing.JLabel jLabelNotificaciones;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
