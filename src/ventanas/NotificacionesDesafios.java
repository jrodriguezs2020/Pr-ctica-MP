/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ventanas;

import java.util.Scanner;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import practicamp.Desafio;
import practicamp.Jugador;

/**
 *
 * @author javii
 */
public class NotificacionesDesafios extends javax.swing.JFrame {
    MenuDesafios menu;
    Jugador jugador;
    int modo;
    
    public NotificacionesDesafios(Jugador jugador, MenuDesafios menu, int modo) {
        initComponents();
        this.setLocationRelativeTo(null);
        this.menu = menu;
        this.jugador = jugador;
        this.modo = modo;
        DefaultListModel model = new DefaultListModel<>();
        for (Desafio s: jugador.getDesafios() ){
            //String nick= s.getNick();
            //model.addElement(nick);
            if (modo == 0) {
                if (jugador.equals(s.getDesafiante())) {
                    String nombre = s.getDesafiado().getNick();
                    String estado;
                    if (s.isAceptado()) {
                        estado = "Aceptado";
                    }
                    else if (s.isValidado()) {
                        estado = "Validado";
                    }
                    else if (!s.isValidado()){
                        estado = "No validado";
                    }
                    else {
                        estado = "No aceptado";
                    }
                    String oroApostado = Integer.toString(s.getOroApostado()); 
                    String notificacion = nombre + "     "  + estado + "      Oro apostado: " + oroApostado;
                    model.addElement(notificacion);
                }
            }
            else if (modo == 1) {
                if (jugador.equals(s.getDesafiado())) {
                    //if (s.isValidado()) {
                        String nombre = s.getDesafiante().getNick();
                        String estado;
                        if (s.isAceptado()) {
                            estado = "Aceptado";
                        }
                        else {
                            estado = "No aceptado";
                        }
                        String oroApostado = Integer.toString(s.getOroApostado()); 
                        String notificacion = nombre + "     "  + estado + "      Oro apostado: " + oroApostado;
                        model.addElement(notificacion);
                    //}
                }
            }
            else {
                if (s.isValidado()) {
                    String nombre;
                    if (jugador.equals(s.getDesafiado())) {
                        nombre = s.getDesafiante().getNick();
                    }
                    else {
                        nombre = s.getDesafiado().getNick();
                    }
                    String oro = Integer.toString(s.getOroGanado());
                    if (jugador.equals(s.getVencedor())) {
                        oro = "+" + oro;
                    }
                    else {
                        oro = "-" + oro;
                    }
                    
                    String notificacion = "Contrincante: " + nombre + "      Oro: " + oro;
                    model.addElement(notificacion);
                }
            }
        }
        jList1.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelNotificaciones = new javax.swing.JLabel();
        jButtonVolver = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jLabelFondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabelNotificaciones.setBackground(new java.awt.Color(0, 0, 102));
        jLabelNotificaciones.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabelNotificaciones.setForeground(new java.awt.Color(255, 255, 255));
        jLabelNotificaciones.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelNotificaciones.setText("Desafios");
        jLabelNotificaciones.setOpaque(true);
        getContentPane().add(jLabelNotificaciones, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 290, 40));

        jButtonVolver.setBackground(new java.awt.Color(255, 255, 255));
        jButtonVolver.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonVolver.setForeground(new java.awt.Color(0, 0, 102));
        jButtonVolver.setText("Volver");
        jButtonVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVolverActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonVolver, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 20, -1, -1));

        jScrollPane1.setBackground(new java.awt.Color(0, 0, 102));
        jScrollPane1.setForeground(new java.awt.Color(255, 255, 255));

        jList1.setBackground(new java.awt.Color(0, 0, 102));
        jList1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jList1.setForeground(new java.awt.Color(255, 255, 255));
        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 90, 320, 240));

        jLabelFondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/fondo.jpg"))); // NOI18N
        getContentPane().add(jLabelFondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 430, 410));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVolverActionPerformed
        this.setVisible(false);
        menu.setVisible(true);
    }//GEN-LAST:event_jButtonVolverActionPerformed

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
        if (modo==1){
            Desafio desafio = buscarDesafio(); 
            int val = JOptionPane.showConfirmDialog(null, "Â¿Quiere aceptar el desafio?", "Aceptar desafio", JOptionPane.YES_NO_OPTION);
            if (val == 0) {
                desafio.setAceptado(true);
                //ejecutar deasfio
            }
            else{
                jugador.getDesafios().remove(desafio);
                desafio.getDesafiante().getDesafios().remove(desafio);
            }
        }
    }//GEN-LAST:event_jList1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NotificacionesDesafios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NotificacionesDesafios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NotificacionesDesafios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NotificacionesDesafios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
       /* java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NotificacionesDesafios().setVisible(true);
            }
        });*/
    }
    
    private Desafio buscarDesafio () {
         String notificacion = jList1.getSelectedValue();
                Scanner sc = new Scanner(notificacion);
                if (sc.hasNextLine()) {
                    String nick = sc.next();
                    String oroApostadoS = sc.findInLine("Oro apostado: ");
                    String aux = sc.next();
                    int oroApostado = Integer.parseInt(aux);
                    for (Desafio d : jugador.getDesafios()) {
                        if (nick.equals(d.getDesafiante().getNick())) {
                            if (oroApostado == d.getOroApostado()) {
                                return d;
                            }
                        }
                    }
                }
        return null;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonVolver;
    private javax.swing.JLabel jLabelFondo;
    private javax.swing.JLabel jLabelNotificaciones;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
